name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9' 
    
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
          key: ${{ github.job }}-${{ matrix.os }} 
             
    - name: Conan install dependencies
      working-directory: ${{github.workspace}}
      run:  |
            pip install conan==1.60.0

            conan profile new default --detect
            if [ "$RUNNER_OS" == "Linux" ]; then
              conan profile update settings.compiler.libcxx=libstdc++11 default
            fi
            conan config set general.revisions_enabled=1
            
            ./install.sh
            
            mkdir build && cd build
            conan install .. \
            -s build_type=${{env.BUILD_TYPE}} \
            -pr:b=default \
            -pr:h=default \
            -b=missing \
            -c tools.system.package_manager:mode=install \
            -c tools.system.package_manager:sudo=True
      shell: bash

    - name: CMake configuration
      working-directory: ${{github.workspace}}/build
      run:  |
            cmake .. -DCMAKE_TOOLCHAIN_FILE="Conan/conan_toolchain.cmake" \
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
      shell: bash

    - name: Cmake build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config ${{env.BUILD_TYPE}}

    - name: Cmake test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}


 
